# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: app/router/config.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2
from common.net import port_pb2 as common_dot_net_dot_port__pb2
from common.net import network_pb2 as common_dot_net_dot_network__pb2
from common.protoext import extensions_pb2 as common_dot_protoext_dot_extensions__pb2
from app.router.routercommon import common_pb2 as app_dot_router_dot_routercommon_dot_common__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x17\x61pp/router/config.proto\x12\x15v2ray.core.app.router\x1a\x19google/protobuf/any.proto\x1a\x15\x63ommon/net/port.proto\x1a\x18\x63ommon/net/network.proto\x1a common/protoext/extensions.proto\x1a$app/router/routercommon/common.proto\"\xbc\x06\n\x0bRoutingRule\x12\r\n\x03tag\x18\x01 \x01(\tH\x00\x12\x17\n\rbalancing_tag\x18\x0c \x01(\tH\x00\x12:\n\x06\x64omain\x18\x02 \x03(\x0b\x32*.v2ray.core.app.router.routercommon.Domain\x12:\n\x04\x63idr\x18\x03 \x03(\x0b\x32(.v2ray.core.app.router.routercommon.CIDRB\x02\x18\x01\x12\x38\n\x05geoip\x18\n \x03(\x0b\x32).v2ray.core.app.router.routercommon.GeoIP\x12\x38\n\nport_range\x18\x04 \x01(\x0b\x32 .v2ray.core.common.net.PortRangeB\x02\x18\x01\x12\x32\n\tport_list\x18\x0e \x01(\x0b\x32\x1f.v2ray.core.common.net.PortList\x12<\n\x0cnetwork_list\x18\x05 \x01(\x0b\x32\".v2ray.core.common.net.NetworkListB\x02\x18\x01\x12\x30\n\x08networks\x18\r \x03(\x0e\x32\x1e.v2ray.core.common.net.Network\x12\x41\n\x0bsource_cidr\x18\x06 \x03(\x0b\x32(.v2ray.core.app.router.routercommon.CIDRB\x02\x18\x01\x12?\n\x0csource_geoip\x18\x0b \x03(\x0b\x32).v2ray.core.app.router.routercommon.GeoIP\x12\x39\n\x10source_port_list\x18\x10 \x01(\x0b\x32\x1f.v2ray.core.common.net.PortList\x12\x12\n\nuser_email\x18\x07 \x03(\t\x12\x13\n\x0binbound_tag\x18\x08 \x03(\t\x12\x10\n\x08protocol\x18\t \x03(\t\x12\x12\n\nattributes\x18\x0f \x01(\t\x12\x16\n\x0e\x64omain_matcher\x18\x11 \x01(\t\x12\x41\n\ngeo_domain\x18\xa1\x93\x04 \x03(\x0b\x32+.v2ray.core.app.router.routercommon.GeoSiteB\x0c\n\ntarget_tag\"\x90\x01\n\rBalancingRule\x12\x0b\n\x03tag\x18\x01 \x01(\t\x12\x19\n\x11outbound_selector\x18\x02 \x03(\t\x12\x10\n\x08strategy\x18\x03 \x01(\t\x12/\n\x11strategy_settings\x18\x04 \x01(\x0b\x32\x14.google.protobuf.Any\x12\x14\n\x0c\x66\x61llback_tag\x18\x05 \x01(\t\">\n\x0eStrategyWeight\x12\x0e\n\x06regexp\x18\x01 \x01(\x08\x12\r\n\x05match\x18\x02 \x01(\t\x12\r\n\x05value\x18\x03 \x01(\x02\"2\n\x14StrategyRandomConfig:\x1a\x82\xb5\x18\n\n\x08\x62\x61lancer\x82\xb5\x18\x08\x12\x06random\"N\n\x17StrategyLeastPingConfig\x12\x14\n\x0cobserver_tag\x18\x07 \x01(\t:\x1d\x82\xb5\x18\n\n\x08\x62\x61lancer\x82\xb5\x18\x0b\x12\tleastping\"\xcc\x01\n\x17StrategyLeastLoadConfig\x12\x34\n\x05\x63osts\x18\x02 \x03(\x0b\x32%.v2ray.core.app.router.StrategyWeight\x12\x11\n\tbaselines\x18\x03 \x03(\x03\x12\x10\n\x08\x65xpected\x18\x04 \x01(\x05\x12\x0e\n\x06maxRTT\x18\x05 \x01(\x03\x12\x11\n\ttolerance\x18\x06 \x01(\x02\x12\x14\n\x0cobserver_tag\x18\x07 \x01(\t:\x1d\x82\xb5\x18\n\n\x08\x62\x61lancer\x82\xb5\x18\x0b\x12\tleastload\"\xb8\x01\n\x06\x43onfig\x12>\n\x0f\x64omain_strategy\x18\x01 \x01(\x0e\x32%.v2ray.core.app.router.DomainStrategy\x12\x30\n\x04rule\x18\x02 \x03(\x0b\x32\".v2ray.core.app.router.RoutingRule\x12<\n\x0e\x62\x61lancing_rule\x18\x03 \x03(\x0b\x32$.v2ray.core.app.router.BalancingRule\"\x91\x04\n\x15SimplifiedRoutingRule\x12\r\n\x03tag\x18\x01 \x01(\tH\x00\x12\x17\n\rbalancing_tag\x18\x0c \x01(\tH\x00\x12:\n\x06\x64omain\x18\x02 \x03(\x0b\x32*.v2ray.core.app.router.routercommon.Domain\x12\x38\n\x05geoip\x18\n \x03(\x0b\x32).v2ray.core.app.router.routercommon.GeoIP\x12\x11\n\tport_list\x18\x0e \x01(\t\x12\x34\n\x08networks\x18\r \x01(\x0b\x32\".v2ray.core.common.net.NetworkList\x12?\n\x0csource_geoip\x18\x0b \x03(\x0b\x32).v2ray.core.app.router.routercommon.GeoIP\x12\x18\n\x10source_port_list\x18\x10 \x01(\t\x12\x12\n\nuser_email\x18\x07 \x03(\t\x12\x13\n\x0binbound_tag\x18\x08 \x03(\t\x12\x10\n\x08protocol\x18\t \x03(\t\x12\x12\n\nattributes\x18\x0f \x01(\t\x12\x16\n\x0e\x64omain_matcher\x18\x11 \x01(\t\x12\x41\n\ngeo_domain\x18\xa1\x93\x04 \x03(\x0b\x32+.v2ray.core.app.router.routercommon.GeoSiteB\x0c\n\ntarget_tag\"\xe7\x01\n\x10SimplifiedConfig\x12>\n\x0f\x64omain_strategy\x18\x01 \x01(\x0e\x32%.v2ray.core.app.router.DomainStrategy\x12:\n\x04rule\x18\x02 \x03(\x0b\x32,.v2ray.core.app.router.SimplifiedRoutingRule\x12<\n\x0e\x62\x61lancing_rule\x18\x03 \x03(\x0b\x32$.v2ray.core.app.router.BalancingRule:\x19\x82\xb5\x18\t\n\x07service\x82\xb5\x18\x08\x12\x06router*G\n\x0e\x44omainStrategy\x12\x08\n\x04\x41sIs\x10\x00\x12\t\n\x05UseIp\x10\x01\x12\x10\n\x0cIpIfNonMatch\x10\x02\x12\x0e\n\nIpOnDemand\x10\x03\x42`\n\x19\x63om.v2ray.core.app.routerP\x01Z)github.com/v2fly/v2ray-core/v5/app/router\xaa\x02\x15V2Ray.Core.App.Routerb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'app.router.config_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\031com.v2ray.core.app.routerP\001Z)github.com/v2fly/v2ray-core/v5/app/router\252\002\025V2Ray.Core.App.Router'
  _ROUTINGRULE.fields_by_name['cidr']._options = None
  _ROUTINGRULE.fields_by_name['cidr']._serialized_options = b'\030\001'
  _ROUTINGRULE.fields_by_name['port_range']._options = None
  _ROUTINGRULE.fields_by_name['port_range']._serialized_options = b'\030\001'
  _ROUTINGRULE.fields_by_name['network_list']._options = None
  _ROUTINGRULE.fields_by_name['network_list']._serialized_options = b'\030\001'
  _ROUTINGRULE.fields_by_name['source_cidr']._options = None
  _ROUTINGRULE.fields_by_name['source_cidr']._serialized_options = b'\030\001'
  _STRATEGYRANDOMCONFIG._options = None
  _STRATEGYRANDOMCONFIG._serialized_options = b'\202\265\030\n\n\010balancer\202\265\030\010\022\006random'
  _STRATEGYLEASTPINGCONFIG._options = None
  _STRATEGYLEASTPINGCONFIG._serialized_options = b'\202\265\030\n\n\010balancer\202\265\030\013\022\tleastping'
  _STRATEGYLEASTLOADCONFIG._options = None
  _STRATEGYLEASTLOADCONFIG._serialized_options = b'\202\265\030\n\n\010balancer\202\265\030\013\022\tleastload'
  _SIMPLIFIEDCONFIG._options = None
  _SIMPLIFIEDCONFIG._serialized_options = b'\202\265\030\t\n\007service\202\265\030\010\022\006router'
  _DOMAINSTRATEGY._serialized_start=2532
  _DOMAINSTRATEGY._serialized_end=2603
  _ROUTINGRULE._serialized_start=199
  _ROUTINGRULE._serialized_end=1027
  _BALANCINGRULE._serialized_start=1030
  _BALANCINGRULE._serialized_end=1174
  _STRATEGYWEIGHT._serialized_start=1176
  _STRATEGYWEIGHT._serialized_end=1238
  _STRATEGYRANDOMCONFIG._serialized_start=1240
  _STRATEGYRANDOMCONFIG._serialized_end=1290
  _STRATEGYLEASTPINGCONFIG._serialized_start=1292
  _STRATEGYLEASTPINGCONFIG._serialized_end=1370
  _STRATEGYLEASTLOADCONFIG._serialized_start=1373
  _STRATEGYLEASTLOADCONFIG._serialized_end=1577
  _CONFIG._serialized_start=1580
  _CONFIG._serialized_end=1764
  _SIMPLIFIEDROUTINGRULE._serialized_start=1767
  _SIMPLIFIEDROUTINGRULE._serialized_end=2296
  _SIMPLIFIEDCONFIG._serialized_start=2299
  _SIMPLIFIEDCONFIG._serialized_end=2530
# @@protoc_insertion_point(module_scope)
